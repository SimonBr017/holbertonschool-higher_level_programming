=========================
TEST 7-base_geometry MODULE
=========================

Import module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

__________________________________________________________
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

>>> bg.integer_validator("name", [1])
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("float", 1.2)
Traceback (most recent call last):
...
TypeError: float must be an integer

>>> bg.integer_validator("float2", -1.2)
Traceback (most recent call last):
...
TypeError: float2 must be an integer

>>> bg.integer_validator("name")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("name", None)
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("num", "2")
Traceback (most recent call last):
...
TypeError: num must be an integer

>>> bg.integer_validator("bool", True)
Traceback (most recent call last):
...
TypeError: bool must be an integer

>>> bg.integer_validator("name", {1,2})
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("string", 1)
>>> bg.integer_validator("name", 12)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("name", (1, ))
Traceback (most recent call last):
...
TypeError: name must be an integer
